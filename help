# redmi# Autobot v6

### Описание

Бот предназначен для торговли на бирже Poloniex

Перед началом использования необходимо пример файла конфигурации config.cfg.default переименовать 
в config.cfg и заполнить в нем параметры API key/secret биржи Poloniex.

Бот привязан к кошелькам BTC биржи Poloniex.

Для включения BTC кошелька в список разрешенных отправьте его номер на адрес электронной почты 
ruslan.barantzev@yandex.ru. 
BTC 17XUv2fRMNfYZXGTKQdyB1GCmPWXkTfzn9

Без добавления кошелька программа работает в режиме ограниченной функциональности:
- при запуске показывается экран с информацией об ограничении функциональности;
- время работы ограничивается случайной величиной от тридцати секунд до четырех минут;
- требуется подтверждение выхода нажатием 'Enter'.


### Лицензия

Запрещается платно распространять программу, а также вносить изменения в код, декомилировать программу 
и распространять ее исходники без согласия разработчика.

Разработчик не несет ответственности за материальный ущерб, полученый в результате использования
программы.


#### Аргументы командной строки:

  Аргументы заданные в командной строке имеют приоритет перед аналогичными параметрами 
  конфигурационного файла.

  -cfg=<ИмяФайла>       или --config <ИмяФайла>                  - задает расположение файла конфигурациию.
  -a=<ИмяСекции>        или --config <ИмяСекцииКонфигФайла>      - задает активную секцию файла конфигурациию.
  -lic=<ЧислоИтераций>  или --limit_iterations_count             - задает максимальное число итераций.
  -lrt=<ВремяВСекундах> или --limit_runtime                      - задает максимальное время работы.
  -ldc=<ЧислоСделок>    или --limit_deals_count                  - задает максимальное число сделок.
  -ce={0|1}             или --confirm_exit 0                     - подтверждать выход нажатием 'Enter'
  -dt={0|1}             или --disable_trading 0                  - запретить торговлю
  -coa={0|1}            или --cancel_all_orders 1                - отменить все открытые ордеры и выйти
  -cob={0|1}            или --cancel_all_buy_orders 1            - отменить все открытые ордеры на покупку и выйти
  -cos={0|1}            или --cancel_all_sell_orders 1           - отменить все открытые ордеры на продажу и выйти
  -cobf={0|1}           или --cancel_all_but_first_buy_orders 1  - отменить все открытые ордеры на покупку кроме первого и выйти
  
    Пример использования: 
    === start-dual.bat
    :Rs
    @echo off
    title "BTC-XRP"
    start "BTC-XRP" auto-v5.exe --config btc-xrp.cfg --limit_runtime 120 --confirm_exit 0

    title "BTC-LBC"
    start "BTC-LBC" auto-v5.exe --config btc-lbc.cfg --limit_runtime 120 --confirm_exit 0

    goto :Rs
    pause
    ===


#### Возвращаемые значения ERRORLEVEL:

  0   - нормальное завершение программы. 
  1   - выполнение программы прервано пользователем нажатием клавиш "Ctrl+C".
  2   - программа завершена после выполнения заданного количества сделок.
  255 - программа завершена аварийно.


#### Параметры файла конфигурации:

  Файл конфигурации по умолчанию ищется в папке, где находится исполняемый файл бота. 
  Имя файла по умолчанию: config.cfg
  Если в родительской папке или в папке бота присутствуют файлы настроек common.cfg, сначала загружается общий файл
  настроек common.cfg из родительской папки, затем common.cfg из папки бота и лишь затем загружается файл конфигурации, 
  указанный в командной строке, либо файл по умолчанию config.cfg. При совпадении настроек в качестве рабочих берутся 
  настройки из файла конфигурации, загруженного позже.

  В случае необходимости указать значение в процентах, знак процентов "%" в файле конфигурации необходимо дублировать.
  Например: 
    reserved = 15%%

  Значения, изменяемые часто, можно вынести в начало файла конфигурации в секцию [DEFAULT] и подставлять в нужные места
  с помощью подстановки %(имя)s.
  Например:
    [DEFAULT]
    _first_bid = 1%%
    [BTC_XVC]
    first_bid = %(_first_bid)s

  В местах где доступна гибкая настройка действуют следующие соглашения:
    - число в процентах содержит в конце двойной знак '%'.
    - при остуствии знака процента число является абсолютным, либо относительным значением.
    - если перед числом находятся знаки '+' или '-', то данное значение является относительным и прибавляется к 
      значению слева. В первой позиции считается, что значение всегда абсолютно.

    Например, эти настройки равнозначны:
      h = A:: 5%%, 0.5:7%%, 1:9%%, 3:12%% 
      h = A:: 5%%, 0.5:+2%%, 1:+2%%, 3:+3%% 

  Режим настройки по номерам ордеров 'O' следует использовать с осторожностью. При некотором сочетании проблем
  с отдачей истории и открытых ордеров биржей, перезапуском бота, ручным снятием ордеров возможны сбои нумерации.
  В дальнейшем этот режим будет дорабатываться и становиться более стабильным, но полной стабильности 
  гарантировать нельзя.

##### Секция [Control]

  history_depth_in_hours (по умолчанию = 240)

    Глубина просмотра истории в часах. В случае, если закупка валюты была давно, если не разрешить просмотр 
    истории на заданную глуину, то сумма усреднения будет расчитана неправильно. Большое значение глубины 
    просмотра истории увеличивает нагрузку на API Poloniex и требования к ресурсам компьютера. А также 
    замедляет работу.

  count_history_items_to_display (по умолчанию = 10)

    Количество последних исполненных ордеров, которые отображать в истории.

  amount_to_force_buy_on_start (по умолчанию = 0)

    Если задан параметр, при условии, что сумма покупки более 0.0001 BTC, еще нет закупленой валюты и нет 
    выставленных ордеров на покупку или продажу, бот принудительно закупает заданное количество валюты. 
    Опция срабатывает один раз, для повторного срабатывания требуется перезапуск бота. Опция 
    amount_to_force_buy_on_start имеет приоритет перед опцией total_to_force_buy_on_start. Если заданное 
    количество валюты стоит более 0.0001 BTC, то закупается заданное количество валюты. Если меньше - 
    закупается валюты на сумму, указанную в опции total_to_force_buy_on_start.

  total_to_force_buy_on_start (по умолчанию = 0)

    Параметр аналогичен предыдущему, с тем отличием, что закупается ордер на указаную сумму. 

  enable_coloring (по умолчанию = 1)

    Включает использование выделения цветом.

  confirm_exit (по умолчанию = 0)

    Если значение параметра 1, то бот будет ждать подтверждения выхода нажатием клавиши 'Enter'.

  disable_trading (по умолчанию = 0)

    Если значение параметра 1, то бот будет работать в режиме просмотра.

  cancel_all_orders (по умолчанию = 0)

    Переводит бота в режим просмотра и удаляет все открытые ордеры.

  cancel_all_buy_orders (по умолчанию = 0)

    Переводит бота в режим просмотра и удаляет все открытые ордеры на покупку.

  cancel_all_sell_orders (по умолчанию = 0)
  
    Переводит бота в режим просмотра и удаляет все открытые ордеры на продажу.

  cancel_all_but_first_buy_orders (по умолчанию = 0)

    Переводит бота в режим просмотра и удаляет все открытые ордеры на покупку, кроме самого первого.

  clear_screen (по умолчанию = 1)

    Включает очистку экрана перед каждой итерацией. Меньше моргает экран, но пропадает возможность 
    просматривать что происходило на предыдущих итерациях.

  limit_iterations_count (по умолчанию = 0)

    Дает возможность ограничить работу бота заданным количеством итераций.

  limit_runtime (по умолчанию = 0)

    Дает возможность ограничить время работы бота в секундах.

  limit_finished_deals (по умолчанию = 0)

    Закончить работу после завершения заданного числа сделок. -1 - закончить работу после первой завершенной сделки.

  halt_on_finished_deals (по умолчанию = 0)

    Ждать подтверждения выхода нажатием клавиши 'Enter', после завершения заданного числа сделок

  log_level (по умолчанию 30)

    Уровени протоколирования:
      0 - не вести протокол;
      20 - протоколировать информационные сообщения;
      30 - протоколировать предупреждения;
      40 - протоколировать ошибки;
      50 - протоколировать критические ошибки.

  ignore_errors (по умолчанию 0)

    Не прерывать выполнение программы, если произошла ошибка. Для отслеживания ошибок можно включить
    протоколирование. После первоначальной настройки файла конфигурации эту опцию рекомендуется установить в 1.

  timeout (по умолчанию 30)

    Если не получен ответ от API Poloniex за заданное время, разрывать соединение и продолжить работу.

  timeout_between_requests (по умолчанию 0.0)

    Дополнительная задержка в секундах между запросами, для стабильной работы нескольких ботов на одном компьютере.

  timeout_when_ip_is_throttled (по умолчанию 90.0)    

    Пауза в секундах до следующего вызова API Poloniex, когда биржа частично блокирует вызовы с вашего ip.

  timeout_between_retries (по умолчанию 0.2)

    Дополнительная задержка в секундах между запросами, для стабильной работы нескольких ботов на одном компьютере.

  timeout_between_iterations (по умолчанию 1.0)

    Дополнительная задержка в секундах между запросами, для стабильной работы нескольких ботов на одном компьютере.

  timeout_between_iteration_stages (по умолчанию 0.0)

    Дополнительная задержка в секундах между запросами, для стабильной работы нескольких ботов на одном компьютере.

#### Активная секция

##### Настройки валютной пары                                                                         *

  main_currency 

    Главная валюта. Допустимые значения: BTC, ETH, XMR, USDT.
    Для торговли должен быть доступен баланс в этой валюте

  second_currency

    Второстепенная валюта - бот будет закупать/продавать эту валюту за основную валюту. 

  period_of_changes (по умолчанию 48h)

    Период, за который берется минимальное значение цены, относительно которого вычисляется рост.
    Допустимые значения: 5m,15m,30m,1h,4h,24h,48h,1w 

  deposit_limit (по умолчанию 0 - нет ограничения)

    Ограничить используемый ботом для работы депозит заданным значением в BTC.

  first_bid (по умолчанию 0.00015)
  
    Объем первого ордера в BTC.

  next_volume_change (по умолчанию 10%%)
    
    Процент увеличения объема следующего ордера.

  orders_count (по умолчанию 5)

    Количество выставляемых ордеров на покупку.

  amount_to_force_buy_on_start (по умолчанию 0.0)

    Количество монет, которые необходимо принудительно купить при первом запуске. 

  total_to_force_buy_on_start (по умолчанию 0.0)

    Количество BTC, на которое необходимо принудительно купить валюты при первом запуске.


#### Настройки профита

  minimum_profit (по умолчанию 0.5%, минимальное возможное значение 0.5%)
  maximum_profit (по умолчанию 10000%, минимально возможное значение равно minimum_profit_percent)

    Минимальный и максимальный профит в процентах. Реальный профит будет ниже на 0.3-0.5% в зависимости от комиссии биржи.
    Бот изменяет значение профита в заданном диапазоне в зависимости от изменения цена.

  rate_increase_profit_correction_treshold = 50%%

    Порог включения коррекции профита с ростом цены.

  rate_increase_profit_correction = 1%%    

    На сколько процентов от размера профита увеличивать профит при росте цены на 1%.
    0 - не использовать коррекцию


#### Настройки отступов

  minimum_padding_top
  maximum_padding_top

    Минимальное и максимальное значения оступа сверху - сетка ордеров переставляется вверх, если цена выросла 
    более, чем на заданный процент. Бот изменяет значение оступа в заданном диапазоне в зависимости от изменения цена.
    Отступ сверху корректируется автоматически, если выисленное значение менее чем в полтора раза больше оступа первого ордера.

    Например: minimum_padding_top = 1.5%, maximum_padding_top = 2.5%
      1. оступ первого ордера = 1.3% - отступ сверху - от 1.95 до 2.5%
      2. оступ первого ордера = 3.3% - отступ сверху - 4.95%

  rate_increase_padding_top_correction_treshold
    
    Порог включения коррекции отступа сверху с ростом цены.

  rate_increase_padding_top_correction

    На сколько процентов от размера отступа сверху увеличивать отступ сверху при росте цены на 1%.
    0 - не использовать коррекцию

  minimum_padding_first
  maximum_padding_first

    Минимальное и максимальное значение отступа до первого ордера. Бот изменяет значение оступа в заданном диапазоне в зависимости от изменения цена.

  rate_increase_padding_first_correction_treshold
    
    Порог включения коррекции отступа первого ордера с ростом цены.

  rate_increase_padding_first_correction

    На сколько процентов от размера отступа первого ордера увеличивать отступ отступ первого ордера при росте цены на 1%.
    0 - не использовать коррекцию

  rate_increase_padding_correction_treshold
    
    Порог включения коррекции отступа с ростом цены.

  rate_increase_padding_correction

    На сколько процентов от размера отступа увеличивать отступ при росте цены на 1%.
    0 - не использовать коррекцию

  padding 

    Параметр задает отступ после первого и последующих ордеров на покупку.

    Может задаваться в виде сетки настроек:

    1. Фиксированный режим
      Например:
        padding = 0.05  # отступ между ордерами на покупку на заданную величину в BTC 
        padding = 5%%   # отступ между ордерами на покупку в 5%

    2. Динамический режим A: задает отступ в зависимости от объема предыдущего ордера.
      Например:
        padding = A:: 5%%, 0.5:7%%, 1:9%%, 3:12%%     # если предыдущий ордер меньше 0.5 BTC, то 5%, если от 0.5 до 1 BTC - 7%...
        padding = A:: 5%%, 0.5:+2%%, 1:+2%%, 3:12%%   # если предыдущий ордер меньше 0.5 BTC, то 5%, если от 0.5 до 1 BTC - 7%...

    3. Динамический режим M: задает отступ в зависимости от объема предыдущего ордера и процента увеличения объема следующего ордера.
      Например: размер первой ставки 0.02 BTC, 
        padding = M:: 5%%, 2:+2%%, 4.5:+3%%, 6.5:12%% # если предыдущий ордер меньше 2x0.02 BTC, то 5%, если от 2x до 4.5x - 7%...

    4. Динамический режим O: задает отступ в зависимости от номера текущего ордера.
      Например: размер первой ставки 0.02 BTC
        padding = O:: 5%%, 3: +2%%, 4: +2%%, 5: +5%% # после первого и второго ордера отступ 5%, после третьего - 7%, четвертого - 9%...

    К вычисленному значению отступа применяется коррекция в зависимости от изменения цены.
    Например:
      Вычисленное значение оступа 5%, 
      задана коррекция rate_increase_padding_correction=1%% 
      и порог включения коррекции rate_increase_padding_correction_treshold = 50%%:

      1. Цена выше минимума на 10% - коррекция не применяется, отступ 5%.
      2. Цена выше минимума на 50% - коррекция не применяется, отступ 5%.
      3. Цена выше минимума на 75% - применяется коррекция 1% на каждый процент роста цены более 50%, отступ 5% + коррекция 0.25*5% = 6.25%.
      4. Цена выше минимума на 100% - применяется коррекция 1% на каждый процент роста цены, отступ 5% + коррекция 0.5*5% = 7.5%.


### В планах

Исправить ошибки:
- Улучшить работу с api.

Добавить возможности:
- Возможность вызвать принудительную переустановку ордеров;
- Возможность сохранять число сделок между запусками.


### Изменения


v4.001b [20.04.2017]

- Добавлена опция в файл конфигурации в секцию 'procent-pro': p4 (по умолчанию = 0.5)
  Параметр устанавливает минимальный профит, который может установить бот.
  Значения меньше 0.5 игнорируются.
- Добавлена опция в файл конфигурации в секцию 'otstup-vtorogo': p2 (по умолчанию = 1)
  Параметр устанавливает минимальный отступ между ордерами на покупку, который может установить бот.
  Значения меньше 0.1 игнорируются.


v5.000b [22.04.2017]

- Добавлена проверка правильности заполнения параметров API в конфигурационном файле.


v5.001b [23.04.2017]

- Уменьшено в несколько раз количество обращений к API Poloniex, можно уменьшить задержки 'interval-info2'.f2.
- Добавлено отображение информации об открытых ордерах.
- Добавлнео отображение информации о последних исполненных ордерах.
- Дабавлена опция в файл конфигурации в секцию 'Control': count_history_items_to_display (по умолчанию = 10).
- Больше не требуются две покупки по 0.00015 для формирования истории торговли.


v5.002b [23.04.2017]

- Добавлена опция в файл конфигурации в секцию 'Control': enable_coloring (по умолчанию = 0) - включение 
  поддержки отображения цветов.
- Добавлена опция в файл конфигурации в секцию 'Control': confirm_exit (по умолчанию = 0) - подтверждения 
  выхода нажатием 'Enter'.


v5.003b [23.04.2017]

- Решена проблема с отображением цветов на Windows Server, опция enable_coloring теперь по умолчанию включена.
- Добавлена проверка на наличие файла конфигурации.
- Добавлен агрумент командной строки -cfg=<имя файла конфигурации>, либо --config <имя файла конфигурации>, 
  позволяющий задать свое имя файла конфигурации.


v5.004b [27.04.2017]

- Исправлена ошибка: Неправильно усредняет, если закупка была более, чем 24 часа назад. 
- Исправлена ошибка: Неправильно определяет объем ордера для закупки, когда валюта закуплена, но не выставлено 
  ордеров.
- Исправлена ошибка: Неправильно усредняет, если в истории присутствуют записи не только 'exchange', но и 'margin'.
- Исправлена ошибка: Добавлена обработка ошибок работы с API;
- Полностью переработана работа с API, задержка f2 больше не требуется.
- Добавлена опция в файл конфигурации в секцию 'Control': amount_to_force_buy_on_start (по умолчанию = 0). 
- Добавлена опция в файл конфигурации в секцию 'Control': total_to_force_buy_on_start (по умолчанию = 0). 
- Добавлена опция в файл конфигурации в секцию 'otstup-pervogo': p (по умолчанию = 0.1).
- Добавлена опция в файл конфигурации в секцию 'Control': hystory_depth_in_hours (по умолчанию = 240).
- Добавлена опция в файл конфигурации в секцию 'Control': clear_screen (по умолчанию = 0).
- Удалена опция из файла конфигурации в секции 'interval-info2': f2.
- Первый ордер на покупку выставляется только, если текущая цена выше, чтобы не платить 'Taker Fee'.
- Ускорено перевыставление ордеров при росте текущей цены.
- Даты выводятся в соответствии с локальной временной зоной.
- Возможность запускать бота на заданное время, заданное число итераций.
- Возможность остановки бота после заданной по порядку завершенной сделки.


v5.1.1b [01.05.2017]

- Исправлена ошибка: ограничение на количество сделок срабатывало на одну сделку позже, чем задано.
- Исправлена ошибка: возможный сбой расчета размера ставок при перемещении ордеров.
- Добавлена опция в файл конфигурации в секцию 'Control': log_level (по умолчанию = 30).
- Добавлена опция в файл конфигурации в секцию 'Control': ignore_errors (по умолчанию = 0).
- Добавлена работа на парах отличных от 'BTC'.
- Добавлено ведение протокола.
- Изменена сумма очередной ставки на покупку после принудительной закупки.
- Изменены значения ERRORLEVEL.

 
v5.1.1b fix 1 [02.05.2017]

- Исправлена ошибка: возможный сбой расчета размера ставок при перемещении ордеров.
- Добавлена опция в файл конфигурации в секцию 'Control': halt_on_finished_deals (по умолчанию = 0).


v5.1.1b fix 2 [07.05.2017]

- Добавлена опция в файл конфигурации в секцию 'procent-pro': p4max (по умолчанию = 10000).
- Добавлена опция в файл конфигурации в секцию 'otstup-pervogo': pmax (по умолчанию = 10000).
- Добавлена опция в файл конфигурации в секцию 'otstup-vtorogo': p2max (по умолчанию = 10000).
- Добавлены аргумент командной строки и опция в файл конфигурации в секцию 'contol': 
  disable_trading (по умолчанию = 0).
- Добавлена аргумент командной строки и опция в файл конфигурации в секцию 'contol': 
  cancel_all_orders (по умолчанию = 0).
- Добавлена аргумент командной строки и опция в файл конфигурации в секцию 'contol': 
  cancel_all_buy_orders (по умолчанию = 0).
- Добавлена аргумент командной строки и опция в файл конфигурации в секцию 'contol': 
  cancel_all_sell_orders (по умолчанию = 0).
- Добавлена аргумент командной строки и опция в файл конфигурации в секцию 'contol': 
  сancel_all_but_first_buy_orders (по умолчанию = 0).
- Добавлена привязка к кошельку BTC.
- Изменено поведение опции limit_finished_deals: если значение меньше нуля, то программа завершит 
  работу после следующей сделки.


v5.1.1b fix 3 [08.05.2017]

- Исправлена ошибка: требовалось нажимать 'Enter' для выхода, если ошибка API Poloniex происходила в месте
  проверки правильности настроек API.


v5.1.1b fix 4 [09.05.2017]

- Добавлена опция в файл конфигурации в секцию 'Control': timeout_between_requests (по умолчанию = 0.0 сек).


v5.1.1b fix 5 [09.05.2017]

- Исправлена ошибка с типом опции timeout.


v5.1.1b fix 6 [09.05.2017]

- Добавлена возможность работы в пробном режиме без привязки кошелька.


v5.1.1b fix 7 [09.05.2017]

- Исправлена ошибка вычисления объема ордера по истории.


v6.0.1 [15.09.2017]

- Оптимизирована работа с API биржи.
- Изменен формат файла конфигурации. Активная секция файла конфигурации задается в параметре 'active' секции по-умолчанию.
- Добавлена возможность настраивать период за который бот будет смотреть изменение цены.
- Добавлена возможность гибкой настройки отступа второго и последующих ордеров.
- Добавлена возможность ограничить используемый ботом размер депозита.
- Добавлена возможность у открытых ордеров отображать ориентировочное число BTC в стакане до ордера.
- Добавлена возможность управлять дополнительными задержками при работе с API биржи.
- Установка опции cancel_all_orders и т.п. автоматически приводит к приостановке торговли, приостанавливать торговлю заранее больше не требуется.
- Заголовок окна теперь отображает информацию о работе бота: активную пару, время последнего обновления информации, используемый файл конфигурации.


v6.0.2 [19.09.2017]

- Исправлена ошибка в отображении задействованного в ордерах баланса из-за которой не всегда работало ограничение размера депозита.
- Добавлена возможность управлять коррекцией отступа второго и последующих ордеров в зависимости от изменения цены.
- Добавлена возможность управлять коррекцией первого отступа в зависимости от изменения цены.
- Добавлена возможность управлять коррекцией отступа сверху в зависимости от изменения цены.
- Добавлена возможность управлять коррекцией профита в зависимости от изменения цены.


### Контакты
ruslan.barantzev@yandex.ru
